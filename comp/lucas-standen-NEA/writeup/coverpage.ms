.TL
NEA coverpage
.AU
Lucas standen
.AI
7949
.AB
.NH 1
Analysis
.NH 2
Overview
.PP
.B Zippy 
.B LANG 
.PP
A next generation language, for general use. Designed for keeping code simple, neet and readable.
 Zippy will be a modern functional language. It will be interpreted like python/perl and lisp. Its syntax should be similar to lisp.
.PP
Some interesting features that Zippy will have is treating everthing in functions, scopes that allow for manual but safe memory management, and interoperablity with C
 libarys
.NH 2
Examples of similar projects
.PP
Since Zippy is a high level programming language it should be compared to other languages.

Since it is interpereted, i should compare it to other such languages. 

Zippy is by far not the first language, and I'm only one person, so I can't expect to beat others in everything. However a few small goals will give the project a good scope.
.NH 3
Python
.PP
Python is a high level OOP language that was designed in 1991. It was made to make programming easy whie still being able to use some of C's functions. 
 Although it has become standard for many usecases, it is slow and inefficent, and very bloated.
.NH 3
Lisp
.PP
Lisp is the second ever programming language, developed at MiT, it is the first functional language, creating many common features like higher order functions, 
 recursion, and garbage collection. It is generally not used anymore as it feels old compared to other functional languages, like ocaml or haskell.
.NH 3
Perl
.PP
Perl is scripting lang designed for use in linux, when bash is too slow, or not suited for the job. 
 Perl is often described as the glue of the universe (see xkcd https://3d.xkcd.com/224/). Its syntax is quite strange however and it is slow. Making it poorly suited for general use.
.NH 2
Questionares
.NH 3
Questions 1 for Amy C
.NH 4 
What do you find the most important in a languge? (eg: speed, readablity)
.PP
Speed, readability, debugging ease and disk space efficiency.
.NH 4
What tools are important for a language to have? (eg: pkg-manager, ide integration)
.PP
IDE integration (things like tab complete and debugging tools), a package manager, and the ability to interact with the user through the command line easily.
.NH 4
What features do you like from other languages (eg: advanced memory managment, haskells terse syntax)
.PP
The ability to pass the memory reference of an object or function and a collection of built-in or standard functions like "print", "split", or "sort"
.NH 4
What do you want to program in this language (eg: websites, low level systems)
.PP
Lightweight command line tools and web backends.
.NH 4
Do you intend to use graphics in the programs you write?
.PP
No
.NH 4
Would you prefer a languge that focuses on ease of use, or power of the code?
.PP
I like a good balance between the two.
.NH 4
What were your last 3 projects? (could they have been written in zippy?)
.PP
A website, a small command-line tool and a midi keyboard (program runs on a Raspberry Pi Pico)
.NH 4
How many languages would you use on a single project? (could zippy be used in your codebase?)
.PP
I try to use as little languages in a project as possible, so likely not in an existing project.
.NH 4
Do you care for low level control, or would you prefer high level abstractions?
.PP
I think low-level control is very important, but high-level abstractions are convenient, so a good balance between the two is best.
.NH 4
Would you be happy to develop libaries for things that aren't already implemented (eg: an sql lib)
.PP
Potentially if it is simple enough to implement new things.
.NH 1
Design
.NH 1
Technical Solution
.NH 1
Testing
.NH 1
Evaluation
.AE
